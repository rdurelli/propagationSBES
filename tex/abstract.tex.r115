Over the last years a number of Crosscutting Frameworks have been developed employing white-box strategies. Using this strategy requires significant knowledge to reuse these frameworks, such as, knowledge in specific programming languages, architectural details, nomenclature used in the framework and also about signature of hook methods. Besides, the reuse process can only be initiated when the development reaches the implementation phase, avoiding starting the reuse process in early development phases. In this paper we present a model-based reuse approach for CFs that improves the productivity by allowing the application engineer to concentrate on just what is really needed during the reuse process. We also present results of two experiments that compare two versions of a CF; the original and the model-based version. The results were promising regarding the time to conduct the reuse process and almost no difference regarding the maintenance effort.